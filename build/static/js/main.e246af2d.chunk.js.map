{"version":3,"sources":["transitSlice.js","components/Direction.js","services/NextTripService.js","components/MetroRoutes.js","images/metro_transit.jpg","components/Logo.js","components/Header.js","components/Stops.js","App.js","store.js","index.js"],"names":["transitSlice","createSlice","name","initialState","route","directions","stops","isLoaded","reducers","updateRoute","state","action","payload","updateDirections","updateStops","updateIsLoaded","loading","actions","Direction","props","history","useHistory","dispatch","useDispatch","useSelector","transit","handleClick","event","routeId","directionId","selectedDirectionId","Number","target","id","updatedDirections","map","direction","isSelected","setIsLoaded","fetch","then","res","json","result","stop","description","push","error","setError","className","value","onClick","MetroRoutes","useState","routes","setRoutes","useEffect","message","onChange","selectedIndex","options","getAttribute","routeName","fetchDirections","direction_id","direction_name","disabled","r","index","route_id","route_label","CircularProgress","Logo","src","logo","alt","Header","Stops","selectedDirection","find","length","to","App","path","configureStore","reducer","transitReducer","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.e246af2d.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const transitSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    route: null,\n    directions: [],\n    stops: [],\n    isLoaded: true\n  },\n  reducers: {\n    updateRoute: (state, action) => {\n      state.route = action.payload;\n    },\n    updateDirections: (state, action) => {\n      state.directions = action.payload;\n    },\n    updateStops: (state, action) => {\n      state.stops = action.payload;\n    },\n    updateIsLoaded: (state, action) => {\n      state.loading = action.payload;\n    }\n  }\n});\n\nexport const {\n  updateRoute,\n  updateDirections,\n  updateStops,\n  updateIsLoaded\n} = transitSlice.actions;\n\nexport default transitSlice.reducer;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { updateDirections, updateStops } from \"../transitSlice\";\nimport { fetchStops } from \"../services/NextTripService\";\nimport \"../App.css\";\n\nexport default function Direction(props) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const route = useSelector((state) => state.transit.route);\n  const directions = useSelector((state) => state.transit.directions);\n\n  const handleClick = (event) => {\n    const selectedDirectionId = Number(event.target.id);\n\n    const updatedDirections = directions.map((direction) => {\n      return {\n        id: direction.id,\n        name: direction.name,\n        isSelected: direction.id === selectedDirectionId\n      };\n    });\n\n    dispatch(updateDirections(updatedDirections));\n\n    props.setIsLoaded(false);\n    fetchStops(route.id, selectedDirectionId).then(\n      (result) => {\n        props.setIsLoaded(true);\n\n        const stops = result.map((stop) => stop.description);\n        dispatch(updateStops(stops));\n        history.push(\"/stops\");\n      },\n      (error) => {\n        props.setError(error);\n        props.setIsLoaded(true);\n      }\n    );\n  };\n\n  return (\n    <div className=\"button-container\">\n      {directions[0] && (\n        <button\n          id={directions[0].id}\n          value={directions[0].name}\n          onClick={handleClick}\n        >\n          {directions[0].name}\n        </button>\n      )}\n      {directions[1] && (\n        <button\n          id={directions[1].id}\n          value={directions[1].name}\n          onClick={handleClick}\n        >\n          {directions[1].name}\n        </button>\n      )}\n    </div>\n  );\n}\n","export const fetchRoutes = () => {\n    return fetch(\"https://svc.metrotransit.org/nextripv2/routes\").then((res) =>\n      res.json()\n    );\n  };\n  \n  export const fetchDirections = (routeId) => {\n    return fetch(\n      `https://svc.metrotransit.org/nextripv2/directions/${routeId}`\n    ).then((res) => res.json());\n  };\n  \n  export const fetchStops = (routeId, directionId) => {\n    return fetch(\n      `https://svc.metrotransit.org/nextripv2/stops/${routeId}/${directionId}`\n    ).then((res) => res.json());\n  };","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport Direction from \"./Direction\";\nimport { updateRoute, updateDirections } from \"../transitSlice\";\nimport { fetchRoutes, fetchDirections } from \"../services/NextTripService\";\nimport \"../App.css\";\n\nexport default function MetroRoutes() {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [routes, setRoutes] = useState([]);\n\n  const route = useSelector((state) => state.transit.route);\n\n  const handleChange = (event) => {\n    const selectedIndex = event.target.options.selectedIndex;\n    const routeId = event.target.options[selectedIndex].getAttribute(\"id\");\n    const routeName = event.target.options[selectedIndex].value;\n\n    dispatch(updateRoute({ id: routeId, name: routeName }));\n\n    fetchDirections(routeId).then(\n      (result) => {\n        setIsLoaded(true);\n        const directions = result.map((direction) => {\n          return {\n            id: direction.direction_id,\n            name: direction.direction_name,\n            isSelected: false\n          };\n        });\n        dispatch(updateDirections(directions));\n      },\n      (error) => {\n        setIsLoaded(true);\n        setError(error);\n      }\n    );\n  };\n\n  useEffect(() => {\n    fetchRoutes().then(\n      (result) => {\n        setIsLoaded(true);\n        setRoutes(result);\n      },\n      (error) => {\n        setIsLoaded(true);\n        setError(error);\n      }\n    );\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <CircularProgress className=\"spinner\" data-testid=\"spinner\"/>;\n  } else {\n    return (\n      <div className=\"route-select-container\" data-testid=\"metro-routes\">\n        <select\n          id=\"routes\"\n          data-testid=\"route-select\"\n          name=\"routes\"\n          onChange={handleChange}\n          value={route ? route.name : \"select route\"}\n        >\n          <option disabled value=\"select route\">\n            {\" \"}\n            Select a route\n          </option>\n          {routes.map((r, index) => (\n            <option key={index} id={r.route_id} value={r.route_label}>\n              {r.route_label}\n            </option>\n          ))}\n        </select>\n        <Direction setIsLoaded={setIsLoaded}> setError={setError}</Direction>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/metro_transit.9a816f81.jpg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport logo from \"../images/metro_transit.jpg\";\nimport \"../App.css\";\n\nexport default function Logo() {\n  const history = useHistory();\n\n  return (\n    <img\n      className=\"logo\"\n      src={logo}\n      alt=\"Logo\"\n      onClick={() => history.push(\"/\")}\n    />\n  );\n}\n","import React from \"react\";\n\nimport Logo from \"./Logo\";\nimport \"../App.css\";\n\nexport default function Header() {\n  return (\n    <div className=\"header-container\">\n        <Logo />\n        <h1 className=\"header-text\">Metro Transit Stop Finder</h1>\n    </div>\n  );\n}","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"../App.css\";\n\nexport default function Stops() {\n  const route = useSelector((state) => state.transit.route);\n  const selectedDirection = useSelector((state) => {\n    return state.transit.directions.find((direction) => direction.isSelected);\n  });\n  const stops = useSelector((state) => state.transit.stops);\n\n  return stops.length <= 0 ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div className=\"stops-container\">\n      <table>\n        <thead>\n          <tr>\n            <th>\n              {route && route.name} -{\" \"}\n              {selectedDirection && selectedDirection.name + \" Stops\"}\n            </th>\n          </tr>\n        </thead>\n        {stops.map((stop, index) => (\n          <tbody key={index}>\n            <tr>\n              <td>{stop}</td>\n            </tr>\n          </tbody>\n        ))}\n      </table>\n    </div>\n  );\n}\n","import MetroRoutes from \"./components/MetroRoutes\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Stops from \"./components/Stops\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Header></Header>\n        <Switch className=\"bottom\">\n          <Route path=\"/stops\">\n            <Stops></Stops>\n          </Route>\n          <Route path=\"/\">\n            <MetroRoutes></MetroRoutes>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport transitReducer from \"./transitSlice\";\n\nexport default configureStore({\n  reducer: {\n    transit: transitReducer\n  }\n});\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  rootElement\n);"],"sourceRoot":""}